{"version":3,"file":"static/js/192.e501016b.chunk.js","mappings":"qMACA,GAAgB,QAAU,6BAA6B,OAAS,4BAA4B,MAAQ,2BAA2B,MAAQ,4B,kDCuEvI,EAtDkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaC,MAAM,iBAAiBC,SAAS,qBACpDC,SAAUH,EAAAA,KACPE,SAAS,wBACTE,QACC,yCACA,gGASN,OACE,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,wBAAI,WACJ,SAAC,KAAD,CACEC,cAAe,CAAEN,MAAO,GAAIE,SAAU,IACtCJ,iBAAkBA,EAClBS,SAXe,SAAAC,GACnBC,QAAQC,IAAIF,GACZZ,GAASe,EAAAA,EAAAA,IAAUH,GACpB,EAKG,UAKE,UAAC,KAAD,CAAMJ,UAAWC,EAAAA,KAAjB,WACE,4BACE,kBAAOO,QAAQ,QAAQR,UAAWC,EAAAA,MAAlC,SAA6C,YAG7C,SAAC,KAAD,CAAOQ,KAAK,QAAQC,GAAG,QAAQC,KAAK,QAAQX,UAAWC,EAAAA,SACvD,SAAC,KAAD,CAAcU,KAAK,QAAQC,UAAU,YAEvC,4BACE,kBAAOJ,QAAQ,WAAWR,UAAWC,EAAAA,MAArC,SAAgD,eAGhD,SAAC,KAAD,CACEQ,KAAK,WACLC,GAAG,WACHC,KAAK,WACLX,UAAWC,EAAAA,SAEb,SAAC,KAAD,CAAcU,KAAK,WAAWC,UAAU,YAE1C,mBAAQH,KAAK,SAAST,UAAU,0BAAhC,SAA0D,iBAOnE,ECzDD,EAVkB,WAEd,OACI,iBAAKA,UAAU,YAAf,WACI,eAAIA,UAAU,eAAd,SAA6B,WAC7B,SAAC,EAAD,MAGX,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoadingForm/LoadingForm.module.css?b967","components/LoadingForm/LoadingForm.js","Pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"LoadingForm_wrapper__r5oRo\",\"button\":\"LoadingForm_button__xIcnR\",\"input\":\"LoadingForm_input__bJ9xj\",\"label\":\"LoadingForm_label__64eQf\"};","import React from 'react';\nimport css from './LoadingForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from 'redux/auth/auth-operations';\n\n\n\n// const validationSchema = Yup.object({\n//   email: Yup.string('Enter your email')\n//     .email('Enter a valid email')\n//     .required('Email is required'),\n//   password: Yup.string('Enter your password')\n//     .min(8, 'Password should be of minimum 8 characters length')\n//     .required('Password is required'),\n// });\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email').required('Email is required'),\n    password: Yup.string()\n      .required('Password is required')\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n        'Password must be at least 8 characters long and contain at least one letter and one number'\n      ),\n  });\n\n  const handleSubmit = values => {\n    console.log(values);\n    dispatch(loginUser(values));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <h2>Enter</h2>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form}>\n          <div>\n            <label htmlFor=\"email\" className={css.label}>\n              Email:\n            </label>\n            <Field type=\"email\" id=\"email\" name=\"email\" className={css.input} />\n            <ErrorMessage name=\"email\" component=\"div\" />\n          </div>\n          <div>\n            <label htmlFor=\"password\" className={css.label}>\n              Password:\n            </label>\n            <Field\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              className={css.input}\n            />\n            <ErrorMessage name=\"password\" component=\"div\" />\n          </div>\n          <button type=\"submit\" className=\"btn btn-outline-success\">\n            Enter\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoadingForm/LoadingForm'\nimport React from 'react'\n\nconst LoginPage = () => {\n\n    return (\n        <div className='container'>\n            <h2 className='form-suptext'>Login</h2>\n            <LoginForm />\n        </div>\n    )\n}\n\nexport default LoginPage"],"names":["dispatch","useDispatch","validationSchema","Yup","email","required","password","matches","className","css","initialValues","onSubmit","values","console","log","loginUser","htmlFor","type","id","name","component"],"sourceRoot":""}