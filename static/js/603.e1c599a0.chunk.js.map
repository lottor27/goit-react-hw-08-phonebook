{"version":3,"file":"static/js/603.e1c599a0.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Sections/sections.module.css?97a2","components/Sections/sections.jsx","../node_modules/clsx/dist/clsx.m.js","components/Contacts/addContact/addContact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Contacts/SavedContact/savedContact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts/contacts.module.css?eacf","components/Contacts/Contacts/contacts.jsx","Pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"sections_title__EQfK7\",\"background\":\"sections_background__Go8aA\",\"iconBook\":\"sections_iconBook__sPe+X\"};","import css from 'components/Sections/sections.module.css';\n\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={css.background}>\n      <h2 className={css.title}>\n        <p>Here</p>\n        {title}\n      </h2>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../../redux/selectors';\nimport { addContact } from '../../../redux/operations';\n\nconst nameInputId = nanoid();\nconst numerInputId = nanoid();\n\nconst AddContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onChangeInput = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const onAddToContacts = e => {\n    e.preventDefault();\n    const dataFields = { name: name, number: number };\n    const isContact = contacts.find(\n      contact => contact.name === dataFields.name\n    );\n    !isContact\n      ? dispatch(addContact(dataFields))\n      : toast.warn(`${name} is already in contacts`);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form  onSubmit={onAddToContacts}>\n        <label htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          \n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={onChangeInput}\n          required\n        />\n        <label htmlFor={numerInputId}>\n          Number\n        </label>\n        <input\n          \n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={onChangeInput}\n          required\n        />\n        <button type=\"submit\" >\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default AddContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"textfilter\":\"Filter_textfilter__uHBfC\",\"inputfilter\":\"Filter_inputfilter__ceBh-\",\"filterbox\":\"Filter_filterbox__KlSNa\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/reducers/filterSlice';\nimport { selectContacts } from '../../redux/selectors';\n\nconst SearchContact = ({ searchTitle }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSearchInput = e => {\n    console.log(e.target.value);\n    dispatch(updateFilter(e.target.value.trim()));\n  };\n\n  return (\n    contacts.length > 0 && (\n      <div>\n        <h3 className={css.textfilter}>Find Find contacts by name</h3>\n        <h3>{searchTitle}</h3>\n        <input\n          className={css.inputfilter}\n          type=\"text\"\n          onInput={handleSearchInput}\n        />\n      </div>\n    )\n  );\n};\n\nexport default SearchContact;\n","\n\nconst SavedContact = ({ id, name, number }) => {\n  return (\n    <li  key={name}>\n      <p >\n        {name}: {number}\n      </p>\n      <button type=\"button\" data-id={id}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default SavedContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts_list__1jhKl\"};","import SavedContact from '../SavedContact/savedContact';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../../redux/operations';\nimport { selectContacts, selectFilter } from '../../../redux/selectors';\nimport css from './contacts.module.css';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleClick = async e => {\n    if (e.target.tagName === 'BUTTON') {\n      const id = e.target.getAttribute('data-id');\n      await dispatch(deleteContact(id));\n      dispatch(fetchContacts());\n    }\n  };\n\n  const filteredContacts = () => {\n    if (filter !== '') {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else if (filter === '') {\n      return contacts;\n    }\n  };\n\n  return contacts.length > 0 ? (\n    <ul onClick={handleClick} className={css.list}>\n      {filteredContacts().map(({ id, name, number }) => (\n        <SavedContact key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  ) : (\n    <p className=\"text-message\">The contact list is empty.</p>\n  );\n};\n\nexport default Contacts;\n","import Loading from 'components/loading/loading';\nimport Section from 'components/Sections/sections';\nimport AddContactForm from 'components/Contacts/addContact/addContact';\nimport SearchContact from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts/contacts';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { fetchContacts } from 'redux/operations';\nimport { selectErrorContacts, selectLoaderContacts } from 'redux/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectErrorContacts);\n  const isLoading = useSelector(selectLoaderContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n      <AddContactForm />\n      <Section title=\"Contacts\">\n        {isLoading && !error && <Loading />}\n        <SearchContact searchTitle=\"Find contacts by name\" />\n        <Contacts />\n      </Section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["title","children","className","css","r","e","t","f","n","Array","isArray","length","arguments","nameInputId","nanoid","numerInputId","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","onChangeInput","evt","target","value","onSubmit","preventDefault","dataFields","find","contact","toast","addContact","htmlFor","type","pattern","onChange","required","searchTitle","onInput","console","log","updateFilter","trim","id","filter","selectFilter","handleClick","tagName","getAttribute","deleteContact","fetchContacts","onClick","toLowerCase","includes","map","error","selectErrorContacts","isLoading","selectLoaderContacts","useEffect","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}